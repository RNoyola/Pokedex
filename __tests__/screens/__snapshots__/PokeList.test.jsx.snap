// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#e11b2e",
      "flex": 1,
      "flexDirection": "column",
    }
  }
>
  <View
    style={
      {
        "marginTop": 30,
      }
    }
  />
  <View
    style={
      {
        "flex": 1,
        "marginHorizontal": 10,
      }
    }
  >
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "black",
          "borderRadius": 6,
          "borderWidth": 1,
          "flexDirection": "row",
          "marginBottom": 10,
        }
      }
    >
      <TextInput
        onChangeText={[Function]}
        style={
          {
            "flex": 1,
            "padding": 10,
          }
        }
        value=""
      />
      <Text
        allowFontScaling={false}
        selectable={false}
        style={
          [
            {
              "color": undefined,
              "fontSize": 30,
            },
            {
              "justifyContent": "center",
              "padding": 5,
            },
            {
              "fontFamily": "Ionicons",
              "fontStyle": "normal",
              "fontWeight": "normal",
            },
            {},
          ]
        }
      >
        î¹¥
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "flex-end",
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          {
            "backgroundColor": "white",
            "borderColor": "gray",
            "borderRadius": 6,
            "borderWidth": 1,
            "height": 30,
            "justifyContent": "center",
            "marginBottom": 20,
            "paddingHorizontal": 10,
            "width": "50%",
          }
        }
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessible={false}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            {
              "alignItems": "center",
              "flexDirection": "row",
              "height": 35,
              "justifyContent": "space-between",
            }
          }
        >
          <Text
            style={
              [
                {
                  "flex": 1,
                  "fontSize": 16,
                  "writingDirection": "ltr",
                },
                undefined,
                {},
              ]
            }
          >
            All
          </Text>
          <Image
            source={
              {
                "testUri": "../../react-native-element-dropdown/lib/commonjs/assets/down.png",
              }
            }
            style={
              {
                "height": 20,
                "tintColor": "gray",
                "width": 20,
              }
            }
          />
        </View>
      </View>
    </View>
    <View
      style={
        {
          "backgroundColor": "white",
          "borderColor": "black",
          "borderRadius": 6,
          "borderWidth": 3,
          "marginBottom": 150,
          "padding": 10,
        }
      }
    >
      <RCTScrollView
        data={[]}
        getItem={[Function]}
        getItemCount={[Function]}
        keyExtractor={[Function]}
        onContentSizeChange={[Function]}
        onLayout={[Function]}
        onMomentumScrollBegin={[Function]}
        onMomentumScrollEnd={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onScrollEndDrag={[Function]}
        removeClippedSubviews={false}
        renderItem={[Function]}
        scrollEventThrottle={0.0001}
        stickyHeaderIndices={[]}
        viewabilityConfigCallbackPairs={[]}
      >
        <View />
      </RCTScrollView>
    </View>
  </View>
</RCTSafeAreaView>
`;
